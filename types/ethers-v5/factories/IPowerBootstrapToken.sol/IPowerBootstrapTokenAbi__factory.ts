/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPowerBootstrapTokenAbi,
  IPowerBootstrapTokenAbiInterface,
} from "../../IPowerBootstrapToken.sol/IPowerBootstrapTokenAbi";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accountsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balancesLength",
        type: "uint256",
      },
    ],
    name: "LengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IPowerBootstrapTokenAbi__factory {
  static readonly abi = _abi;
  static createInterface(): IPowerBootstrapTokenAbiInterface {
    return new utils.Interface(_abi) as IPowerBootstrapTokenAbiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPowerBootstrapTokenAbi {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IPowerBootstrapTokenAbi;
  }
}
