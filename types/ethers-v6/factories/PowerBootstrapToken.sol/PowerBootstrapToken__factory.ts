/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PowerBootstrapToken,
  PowerBootstrapTokenInterface,
} from "../../PowerBootstrapToken.sol/PowerBootstrapToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "initialAccounts_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "initialBalances_",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accountsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balancesLength",
        type: "uint256",
      },
    ],
    name: "LengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "epoch_",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "balance_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch_",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f80fd5b5060405161043a38038061043a83398101604081905261002e916101be565b81518151808214610060576040516355c5b3e360e11b8152600481018390526024810182905260440160405180910390fd5b5f805b838110156100e25784818151811061007d5761007d610288565b60200260200101515f8088848151811061009957610099610288565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20819055826100ce91906102b0565b9150806100da816102c9565b915050610063565b50608052506102e192505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561012c5761012c6100f0565b604052919050565b5f6001600160401b0382111561014c5761014c6100f0565b5060051b60200190565b5f82601f830112610165575f80fd5b8151602061017a61017583610134565b610104565b82815260059290921b84018101918181019086841115610198575f80fd5b8286015b848110156101b3578051835291830191830161019c565b509695505050505050565b5f80604083850312156101cf575f80fd5b82516001600160401b03808211156101e5575f80fd5b818501915085601f8301126101f8575f80fd5b8151602061020861017583610134565b82815260059290921b84018101918181019089841115610226575f80fd5b948201945b838610156102595785516001600160a01b038116811461024a575f8081fd5b8252948201949082019061022b565b91880151919650909350505080821115610271575f80fd5b5061027e85828601610156565b9150509250929050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b808201808211156102c3576102c361029c565b92915050565b5f600182016102da576102da61029c565b5060010190565b6080516101426102f85f395f609101526101425ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80634ee2cd7e14610038578063981b24d014610080575b5f80fd5b61006e6100463660046100b3565b5073ffffffffffffffffffffffffffffffffffffffff165f9081526020819052604090205490565b60405190815260200160405180910390f35b61006e61008e3660046100f5565b507f000000000000000000000000000000000000000000000000000000000000000090565b5f80604083850312156100c4575f80fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146100e7575f80fd5b946020939093013593505050565b5f60208284031215610105575f80fd5b503591905056fea2646970667358221220c321aeeee45824fe03213aa875a437a512cf51bb654a415a5457a37bb4aa1f9b64736f6c63430008140033";

type PowerBootstrapTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PowerBootstrapTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PowerBootstrapToken__factory extends ContractFactory {
  constructor(...args: PowerBootstrapTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialAccounts_: AddressLike[],
    initialBalances_: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialAccounts_,
      initialBalances_,
      overrides || {}
    );
  }
  override deploy(
    initialAccounts_: AddressLike[],
    initialBalances_: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialAccounts_,
      initialBalances_,
      overrides || {}
    ) as Promise<
      PowerBootstrapToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PowerBootstrapToken__factory {
    return super.connect(runner) as PowerBootstrapToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PowerBootstrapTokenInterface {
    return new Interface(_abi) as PowerBootstrapTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PowerBootstrapToken {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PowerBootstrapToken;
  }
}
