/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockBootstrapToken,
  MockBootstrapTokenInterface,
} from "../../Mocks.sol/MockBootstrapToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "epoch_",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "balance_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance_",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalSupply_",
        type: "uint256",
      },
    ],
    name: "setTotalSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch_",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061018f806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634ee2cd7e14610051578063981b24d01461009a578063e30443bc146100af578063f7ea7a3d146100e8575b600080fd5b61008861005f3660046100fb565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b60405190815260200160405180910390f35b6100886100a8366004610140565b5060005490565b6100e66100bd3660046100fb565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260016020526040902055565b005b6100e66100f6366004610140565b600055565b6000806040838503121561010e57600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461013257600080fd5b946020939093013593505050565b60006020828403121561015257600080fd5b503591905056fea2646970667358221220d2f76c5b6f11883fa8ebe67a6876d26a077f2506f45459433a86bd07ab3b2fa964736f6c63430008130033";

type MockBootstrapTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBootstrapTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBootstrapToken__factory extends ContractFactory {
  constructor(...args: MockBootstrapTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MockBootstrapToken> {
    return super.deploy(overrides || {}) as Promise<MockBootstrapToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockBootstrapToken {
    return super.attach(address) as MockBootstrapToken;
  }
  override connect(signer: Signer): MockBootstrapToken__factory {
    return super.connect(signer) as MockBootstrapToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBootstrapTokenInterface {
    return new utils.Interface(_abi) as MockBootstrapTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBootstrapToken {
    return new Contract(address, _abi, signerOrProvider) as MockBootstrapToken;
  }
}
