/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockERC20Permit,
  MockERC20PermitInterface,
} from "../../Mocks.sol/MockERC20Permit";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "MalleableSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "ReusedNonce",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "SignatureExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroDecreaseAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroIncreaseAllowance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "domainSeparator_",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "allowance_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedAmount_",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedAmount_",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline_",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v_",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r_",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s_",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender_",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001145380380620011458339810160408190526200003491620001c3565b8281837f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000620000668382620002d7565b604051620000759190620003a3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f198184030181529190528051602090910120608052506002620000ec8382620002d7565b5060ff1660a052506200042192505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200012657600080fd5b81516001600160401b0380821115620001435762000143620000fe565b604051601f8301601f19908116603f011681019082821181831017156200016e576200016e620000fe565b816040528381526020925086838588010111156200018b57600080fd5b600091505b83821015620001af578582018301518183018401529082019062000190565b600093810190920192909252949350505050565b600080600060608486031215620001d957600080fd5b83516001600160401b0380821115620001f157600080fd5b620001ff8783880162000114565b945060208601519150808211156200021657600080fd5b50620002258682870162000114565b925050604084015160ff811681146200023d57600080fd5b809150509250925092565b600181811c908216806200025d57607f821691505b6020821081036200027e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d257600081815260208120601f850160051c81016020861015620002ad5750805b601f850160051c820191505b81811015620002ce57828155600101620002b9565b5050505b505050565b81516001600160401b03811115620002f357620002f3620000fe565b6200030b8162000304845462000248565b8462000284565b602080601f8311600181146200034357600084156200032a5750858301515b600019600386901b1c1916600185901b178555620002ce565b600085815260208120601f198616915b82811015620003745788860151825594840194600190910190840162000353565b5085821015620003935787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003b38162000248565b60018281168015620003ce5760018114620003e45762000415565b60ff198416875282151583028701945062000415565b8760005260208060002060005b858110156200040c5781548a820152908401908201620003f1565b50505082870194505b50929695505050505050565b60805160a051610cf76200044e600039600061019e0152600081816101ca01526105c40152610cf76000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806340c10f1911610097578063a457c2d711610066578063a457c2d714610274578063a9059cbb14610287578063d505accf1461029a578063dd62ed3e146102ad57600080fd5b806340c10f191461020157806370a08231146102165780637ecebe001461023657806395d89b411461026c57600080fd5b806330adf81f116100d357806330adf81f14610170578063313ce567146101975780633644e515146101c857806339509351146101ee57600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd1461015d575b600080fd5b61010d6102f3565b60405161011a9190610a50565b60405180910390f35b610136610131366004610ae5565b610385565b604051901515815260200161011a565b61014f60045481565b60405190815260200161011a565b61013661016b366004610b0f565b61039b565b61014f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161011a565b7f000000000000000000000000000000000000000000000000000000000000000061014f565b6101366101fc366004610ae5565b6103bd565b61021461020f366004610ae5565b610441565b005b61014f610224366004610b4b565b60056020526000908152604090205481565b61014f610244366004610b4b565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b61010d6104e6565b610136610282366004610ae5565b6104f5565b610136610295366004610ae5565b610502565b6102146102a8366004610b6d565b61050f565b61014f6102bb366004610be0565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260036020908152604080832093909416825291909152205490565b60606000805461030290610c13565b80601f016020809104026020016040519081016040528092919081815260200182805461032e90610c13565b801561037b5780601f106103505761010080835404028352916020019161037b565b820191906000526020600020905b81548152906001019060200180831161035e57829003601f168201915b5050505050905090565b60006103923384846106eb565b50600192915050565b60006103a884338461075a565b6103b38484846107ea565b5060019392505050565b6000816000036103f9576040517f817e74f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600081815260036020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684529091529020546103929190859061043c908690610c95565b6106eb565b73ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604081208054839290610476908490610c95565b92505081905550806004600082825461048f9190610c95565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60606002805461030290610c13565b600061039233848461075a565b60006103923384846107ea565b73ffffffffffffffffffffffffffffffffffffffff87811660008181526001602090815260408083205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e0850182528051908301207f19010000000000000000000000000000000000000000000000000000000000006101008601527f00000000000000000000000000000000000000000000000000000000000000006101028601526101228086019190915281518086039091018152610142909401905282519201919091209061061b82888888886108bf565b90508073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146106a7576040517fefe0e68600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808c166004830152821660248201526044015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020819052604090912090840190556106df8a8a8a6106eb565b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b80600003610794576040517f28bd1f0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600090815260036020908152604080832093861683529290522054600181016107d55750505050565b6107e4848461043c8585610cae565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600560205260408120805483929061081f908490610cae565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604081208054839290610859908490610c95565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074d91815260200190565b600084421115610904576040517ff88f04900000000000000000000000000000000000000000000000000000000081526004810186905242602482015260440161069e565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a082118061094557508360ff16601b1415801561094557508360ff16601c14155b1561097c576040517ff0ad0d0900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051600081526020810180835288905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa1580156109cf573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610a47576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b95945050505050565b600060208083528351808285015260005b81811015610a7d57858101830151858201604001528201610a61565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ae057600080fd5b919050565b60008060408385031215610af857600080fd5b610b0183610abc565b946020939093013593505050565b600080600060608486031215610b2457600080fd5b610b2d84610abc565b9250610b3b60208501610abc565b9150604084013590509250925092565b600060208284031215610b5d57600080fd5b610b6682610abc565b9392505050565b600080600080600080600060e0888a031215610b8857600080fd5b610b9188610abc565b9650610b9f60208901610abc565b95506040880135945060608801359350608088013560ff81168114610bc357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610bf357600080fd5b610bfc83610abc565b9150610c0a60208401610abc565b90509250929050565b600181811c90821680610c2757607f821691505b602082108103610c60577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610ca857610ca8610c66565b92915050565b81810381811115610ca857610ca8610c6656fea264697066735822122030fcec97faa214f32549cd206b930217aa3933832a462d05e0615f2f5512352064736f6c63430008130033";

type MockERC20PermitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC20PermitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC20Permit__factory extends ContractFactory {
  constructor(...args: MockERC20PermitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    symbol_: string,
    name_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<MockERC20Permit> {
    return super.deploy(
      symbol_,
      name_,
      decimals_,
      overrides || {}
    ) as Promise<MockERC20Permit>;
  }
  override getDeployTransaction(
    symbol_: string,
    name_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      symbol_,
      name_,
      decimals_,
      overrides || {}
    );
  }
  override attach(address: string): MockERC20Permit {
    return super.attach(address) as MockERC20Permit;
  }
  override connect(signer: Signer): MockERC20Permit__factory {
    return super.connect(signer) as MockERC20Permit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC20PermitInterface {
    return new utils.Interface(_abi) as MockERC20PermitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC20Permit {
    return new Contract(address, _abi, signerOrProvider) as MockERC20Permit;
  }
}
