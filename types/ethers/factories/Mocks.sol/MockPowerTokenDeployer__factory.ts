/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockPowerTokenDeployer,
  MockPowerTokenDeployerInterface,
} from "../../Mocks.sol/MockPowerTokenDeployer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "governor_",
        type: "address",
      },
      {
        internalType: "address",
        name: "cashToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "bootstrapToken_",
        type: "address",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "deployed_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNextDeploy",
    outputs: [
      {
        internalType: "address",
        name: "nextDeploy_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610111806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063a852d90b146037578063d9181cd3146063575b600080fd5b60005b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b603a606e366004609f565b60009392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114609a57600080fd5b919050565b60008060006060848603121560b357600080fd5b60ba846077565b925060c6602085016077565b915060d2604085016077565b9050925092509256fea2646970667358221220a07afe3b508518557b4dc0085f492b17f0cd78ff6143c75b92be6bbfe8f4baa464736f6c63430008130033";

type MockPowerTokenDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPowerTokenDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPowerTokenDeployer__factory extends ContractFactory {
  constructor(...args: MockPowerTokenDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MockPowerTokenDeployer> {
    return super.deploy(overrides || {}) as Promise<MockPowerTokenDeployer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockPowerTokenDeployer {
    return super.attach(address) as MockPowerTokenDeployer;
  }
  override connect(signer: Signer): MockPowerTokenDeployer__factory {
    return super.connect(signer) as MockPowerTokenDeployer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPowerTokenDeployerInterface {
    return new utils.Interface(_abi) as MockPowerTokenDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPowerTokenDeployer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockPowerTokenDeployer;
  }
}
